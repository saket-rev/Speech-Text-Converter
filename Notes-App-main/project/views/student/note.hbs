{{!-- 
 {{!-- <!DOCTYPE html>
 <html lang="en">
 <head>
     <meta charset="UTF-8">
     <meta http-equiv="X-UA-Compatible" content="IE=edge">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Speech to text converter</title>
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" />
     
 </head>
   <body> --}}
     
       {{!-- <br> --}}
       <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" />
    
       <div class="middle">
         <h1 class="text-center mt-5">
           Voice ----> Text 
         </h1>

       <br>
       <span id="instructions"></span>
       <div class="form-group" >
       <textarea class="form-control" id="textarea" cols="50" rows="6" value={{student.textarea}}></textarea>
       <br />
     <br />
       </div>
       <button id="start" class="btn btn-danger btn-block mx-3 my-3" style="width: 20%">
         Start Recording
       </button>

       <button id="clear" class="btn btn-primary btn-block" style="width: 20%">
         Clear Text
       </button>
       
       
          <a class="btn btn-success btn-block mx-3 my-3" href="/student/list" onClick="myalert()" style="width: 20%"> Save Note</a>
        
    
     
     
 {{!-- </body> --}}

   
   <script> function myalert(){
          alert("your note has been saved successfully!Click ok to see")
        
        
   };
   
   </script>
   <script>
    var SpeechRecognition = window.webkitSpeechRecognition;

var recognition = new SpeechRecognition();
let saveHandle

var Textbox = $("#textarea");
var instructions = $("#instructions");

var Content = "";

recognition.continuous = true;

recognition.onresult = function (event) {
  var current = event.resultIndex;

  var transcript = event.results[current][0].transcript;

  Content += transcript;
  Textbox.val(Content);
};

$("#start").on("click", function (e) {
  if ($(this).text() == "Stop Recording") {
    $(this).html("Start Recording");
    $("#instructions").html("");
    recognition.stop();
  } else {
    $(this).html("Stop Recording");
    $("#instructions").html("Voice Recognition is on");
    if (Content.length) {
      Content += " ";
    }
    recognition.start();
  }
});


async function getNewFileHandle() {
  
  const handle = await window.chooseFileSystemEntries();
  return handle;
}
async function loadFile() {

  saveHandle = await getNewFileHandle()

  if(await verifyPermission(saveHandle,true)){
 
  // Request permission, if the user grants permission, return true.
    const file = await saveHandle.getFile();
    const contents = await file.text();
    console.log(contents);
    Content += contents;
    $("textarea").val(contents);
  }}

  async function saveFile(saveHandle,content){
    const writable = await saveHandle.createWritable();
    // Write the contents of the file to the stream.
    await writable.write(content);
    // Close the file and write the contents to disk.
    await writable.close();

    alert("File Changes were Saved")
  }

  async function verifyPermission(fileHandle, withWrite) {
    const opts = {};
    if (withWrite) {
      opts.writable = true;
    }
    // Check if we already have permission, if so, return true.
    if (await fileHandle.queryPermission(opts) === 'granted') {
      return true;
    }
    // Request permission to the file, if the user grants permission, return true.
    if (await fileHandle.requestPermission(opts) === 'granted') {
      return true;
    }
    // The user did nt grant permission, return false.
    return false;
  }

 $("#clear").click(function () {
   Textbox.val("");
  
  $("#start").html("Start Recording")
});

Textbox.on("input", function () {
  Content = $(this).val();
});
</script>



  --}}